{"version":3,"sources":["components/Container.jsx","components/Header.jsx","components/Footer.jsx","components/DataVisualizer.jsx","components/DataBar.jsx","components/DataBarToggler.jsx","components/Cover.jsx","components/LocationDetector.jsx","App.jsx","serviceWorker.js","index.js"],"names":["background","children","style","backgroundBlendMode","minHeight","display","flexDirection","name","Navbar","variant","Brand","fontFamily","fontWeight","letterSpacing","textTransform","href","className","Text","textAlign","animated","data","incident","db","selectedCounty","onSelectCounty","zoomed","projection","projectionConfig","rotate","scale","maxHeight","marginTop","marginBottom","transition","overflow","onClick","event","scoped","geography","geographies","map","geo","id","rsmKey","key","fill","stroke","strokeWidth","offset","stopColor","objects","myJson","geometries","properties","coordinates","prediction","r","pointerEvents","Latitude","Longitude","AcresBurned","color","fontSize","fluid","height","backgroundColor","paddingTop","overflowY","CardDeck","filter","County","Card","width","flex","Header","Title","Name","Subtitle","AdminUnit","Body","Location","Footer","Started","toggled","onToggle","position","right","top","transform","status","loadData","left","opacity","margin","join","loading","success","failed","location","query","country","regionName","county","useState","setSelectedCounty","dataBarToggled","setDataBarToggled","mapData","setMapData","dbData","setDbData","incidentData","setIncidentData","locationData","setLocationData","loadMapData","a","console","log","fetch","config","site","api","response","ok","json","loadLocationData","loadIncidentData","loadDbData","ip","format","zip","zipCodes","county_name","subunits","useEffect","vw","x","Container","stopPropagation","DataBarToggler","DataBar","LocationDetector","Cover","Boolean","window","hostname","match","ReactDOM","render","StrictMode","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f9cef631.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default ({ background, children }) => (\n  <div\n    style={{\n      background: background,\n      backgroundBlendMode: \"multiply,multiply\",\n      minHeight: \"100vh\",\n      display: \"flex\",\n      flexDirection: \"row\",\n    }}\n  >\n    {children}\n  </div>\n);\n","import React from \"react\";\nimport { Navbar } from \"react-bootstrap\";\n\nexport default ({ name }) => (\n  <Navbar variant=\"dark\">\n    <Navbar.Brand\n      style={{\n        fontFamily: \"arial\",\n        fontWeight: 900,\n        letterSpacing: \".5rem\",\n        textTransform: \"uppercase\",\n      }}\n      href=\"/\"\n    >\n      {name}\n    </Navbar.Brand>\n  </Navbar>\n);\n","import React from \"react\";\nimport { Navbar } from \"react-bootstrap\";\n\nexport default ({ name }) => (\n  <Navbar variant=\"dark\" className=\"justify-content-center\">\n    <Navbar.Text\n      style={{\n        fontFamily: \"arial\",\n        fontWeight: 900,\n        letterSpacing: \".5rem\",\n        textTransform: \"uppercase\",\n        textAlign: \"center\",\n      }}\n      href=\"/\"\n    >\n      raw data from usda & ca gov\n    </Navbar.Text>\n  </Navbar>\n);\n","import React from \"react\";\nimport { animated } from \"react-spring\";\nimport {\n  ComposableMap,\n  Geographies,\n  Geography,\n  Marker,\n} from \"react-simple-maps\";\nimport { FaFire } from \"react-icons/fa\";\n\nlet DataVisualizer = ({\n  data,\n  incident,\n  db,\n  selectedCounty,\n  onSelectCounty,\n  zoomed,\n}) => (\n  <ComposableMap\n    projection=\"geoAzimuthalEqualArea\"\n    projectionConfig={{\n      rotate: [119.5, 322.5, 40],\n      scale: 4800,\n    }}\n    style={{\n      maxHeight: zoomed ? \"calc(100vh - 2 * 56px)\" : \"calc(50vh - 56px)\",\n      marginTop: zoomed ? \"0\" : \"calc(25vh - 28px)\",\n      marginBottom: zoomed ? \"0\" : \"calc(25vh - 28px)\",\n      transition: \"max-height 300ms ease, margin 300ms ease\",\n      overflow: \"visible\",\n    }}\n    onClick={(event) => onSelectCounty(event, null)}\n  >\n    <style scoped>\n      {`\n        .county {\n          transition: fill 300ms ease;\n        }\n        :focus {\n          outline: none;\n        }\n      `}\n    </style>\n    <Geographies geography={data}>\n      {({ geographies }) =>\n        geographies.map((geo) => {\n          return (\n            <Geography\n              id={geo.rsmKey}\n              key={geo.rsmKey}\n              geography={geo}\n              fill=\"#EEE\"\n              stroke={\n                selectedCounty != null && selectedCounty.rsmKey === geo.rsmKey\n                  ? \"#000\"\n                  : \"#CCC\"\n              }\n              strokeWidth={2}\n              className=\"county\"\n              onClick={(event) => onSelectCounty(event, geo)}\n            />\n          );\n        })\n      }\n    </Geographies>\n    {selectedCounty != null && <use href={`#${selectedCounty.rsmKey}`} />}\n    <radialGradient id=\"fireMarker\">\n      <stop offset=\"0%\" stopColor=\"rgba(255, 0, 0, 0.75)\" />\n      <stop offset=\"100%\" stopColor=\"rgba(255, 255, 0, 0)\" />\n    </radialGradient>\n    {db &&\n      db.objects.myJson.geometries.map(\n        ({ properties, coordinates }) =>\n          properties.prediction === \"burned\" && (\n            <Marker coordinates={coordinates}>\n              <circle\n                r={20}\n                fill=\"url(#fireMarker)\"\n                style={{ pointerEvents: \"none\" }}\n              />\n            </Marker>\n          )\n      )}\n    {incident &&\n      incident.map(\n        ({ Latitude, Longitude, AcresBurned }) =>\n          Longitude &&\n          Latitude && (\n            <Marker coordinates={[Longitude, Latitude]}>\n              <FaFire\n                style={{\n                  color: AcresBurned > 0 ? \"red\" : \"yellow\",\n                  fontSize: \"2rem\",\n                  pointerEvents: \"none\",\n                }}\n              />\n            </Marker>\n          )\n      )}\n  </ComposableMap>\n);\n\nexport default animated(DataVisualizer);\n","import React from \"react\";\nimport { Card, CardDeck, Container, Row } from \"react-bootstrap\";\n\nexport default ({ selectedCounty, incident }) => (\n  <Container\n    fluid\n    style={{\n      height: \"100vh\",\n      backgroundColor: \"#1E212B\",\n      paddingTop: \"1rem\",\n      overflowY: \"scroll\",\n    }}\n  >\n    <h1\n      style={{\n        color: \"white\",\n        fontFamily: \"arial\",\n        fontWeight: 900,\n        textTransform: \"uppercase\",\n        letterSpacing: \"1.25rem\",\n        textAlign: \"center\",\n      }}\n    >\n      {selectedCounty === null ? \"California\" : selectedCounty.properties.name}\n    </h1>\n    <CardDeck style={{ marginTop: \"2rem\" }}>\n      {incident &&\n        incident\n          .filter(\n            ({ County }) =>\n              selectedCounty === null ||\n              County === selectedCounty.properties.name\n          )\n          .map((incident) => (\n            <Card\n              style={{\n                width: \"calc(50% - 30px)\",\n                flex: \"none\",\n                marginBottom: \".5rem\",\n              }}\n            >\n              <Card.Header>\n                <Card.Title>{incident.Name}</Card.Title>\n                <Card.Subtitle>{incident.AdminUnit}</Card.Subtitle>\n              </Card.Header>\n              <Card.Body>\n                <Card.Text>Location: {incident.Location}</Card.Text>\n                <Card.Text>Latitude: {incident.Latitude}</Card.Text>\n                <Card.Text>Longitude: {incident.Longitude}</Card.Text>\n                <Card.Text>Acres Burned: {incident.AcresBurned}</Card.Text>\n              </Card.Body>\n              <Card.Footer>\n                <Card.Text>{incident.Started}</Card.Text>\n              </Card.Footer>\n            </Card>\n          ))}\n    </CardDeck>\n  </Container>\n);\n","import React from \"react\";\nimport { FaAngleLeft } from \"react-icons/fa\";\n\nexport default ({ toggled, onToggle }) => (\n  <div\n    style={{ position: \"absolute\", right: 0, top: 0, width: 56, height: 56 }}\n    onClick={onToggle}\n  >\n    <FaAngleLeft\n      style={{\n        transition: \"transform 300ms ease\",\n        transform: toggled ? \"rotate(180deg)\" : \"rotate(0deg)\",\n        width: 56,\n        height: 56,\n      }}\n      fill=\"white\"\n    />\n  </div>\n);\n","import React from \"react\";\nimport { FaMap, FaServer, FaUndoAlt } from \"react-icons/fa\";\n\nexport default ({ display, background, name, status, loadData }) => (\n  <div\n    style={{\n      position: \"fixed\",\n      top: 0,\n      left: 0,\n      width: \"100vw\",\n      height: \"100vh\",\n      opacity: display ? 1 : 0,\n      transition: \"opacity 300ms ease 300ms\",\n      pointerEvents: display ? \"auto\" : \"none\",\n      background\n    }}\n  >\n    <div\n      style={{\n        position: \"absolute\",\n        left: \"50%\",\n        top: \"50%\",\n        transform: \"translate(-50%, -50%)\",\n      }}\n    >\n      <h1\n        style={{\n          color: \"white\",\n          fontSize: \"8rem\",\n          fontFamily: \"arial\",\n          fontWeight: 900,\n          letterSpacing: \"4rem\",\n          textTransform: \"uppercase\",\n          margin: \"4rem\",\n        }}\n      >\n        {name}\n      </h1>\n      <style scoped>\n        {`\n          @-webkit-keyframes statusblink {\n            0% {\n              transform: scale(1.1);\n            }\n            100% {\n              transform: scale(1);\n            }\n          }\n          .status {\n            width: 50%;\n            display: inline-block;\n            text-align: center;\n            letter-spacing: .25rem;\n            text-transform: uppercase;\n            transition: color 300ms ease;\n          }\n          .status.loading {\n            color: white;\n          }\n          .status.loading svg {\n            animation: statusblink 300ms ease infinite alternate;\n          }\n          .status.success {\n            color: #3498db;\n          }\n          .status.failed {\n            color: #e74c3c;\n          }\n          .status.failed svg {\n            transition: transform 300ms ease;\n          }\n          .status.failed:hover svg {\n            transform: rotate(-180deg);\n          }\n        `}\n      </style>\n      <div className={[\"status\", status.map].join(\" \")}>\n        {status.map !== \"failed\" && (\n          <FaMap style={{ fontSize: \"8rem\", margin: \"1rem\" }} />\n        )}\n        {status.map === \"failed\" && (\n          <FaUndoAlt\n            style={{ fontSize: \"8rem\", margin: \"1rem\" }}\n            onClick={loadData}\n          />\n        )}\n        <br />\n        <span>\n          {\n            {\n              loading: \"Loading map information\",\n              success: \"Map information loaded\",\n              failed: \"Failed loading map infomation\",\n            }[status.map]\n          }\n        </span>\n      </div>\n      <div className={[\"status\", status.db].join(\" \")}>\n        {status.db !== \"failed\" && (\n          <FaServer style={{ fontSize: \"8rem\", margin: \"1rem\" }} />\n        )}\n        {status.db === \"failed\" && (\n          <FaUndoAlt\n            style={{ fontSize: \"8rem\", margin: \"1rem\" }}\n            onClick={loadData}\n          />\n        )}\n        <br />\n        <span>\n          {\n            {\n              loading: \"Loading wild fire predictions\",\n              success: \"Wild fire predictions loaded\",\n              failed: \"Failed loading wild fire predictions\",\n            }[status.db]\n          }\n        </span>\n      </div>\n    </div>\n  </div>\n);\n","import React from \"react\";\nimport { FaMapMarker } from \"react-icons/fa\";\n\nexport default ({ location, background }) => (\n  <div\n    style={{\n      position: \"fixed\",\n      top: 0,\n      left: 0,\n      width: \"100vw\",\n      height: \"100vh\",\n      opacity: location.status === \"loading\" ? 1 : 0,\n      transition: \"opacity 300ms ease 300ms\",\n      pointerEvents: location.status === \"loading\" ? \"auto\" : \"none\",\n      color: \"white\",\n      background,\n    }}\n  >\n    <style scoped>\n      {`\n      @-webkit-keyframes statusjump {\n        0% {\n          transform: translateY(-10%);\n        }\n        100% {\n          transform: translateX(0);\n        }\n      }\n      .status1 {\n        transition: color 300ms ease;\n      }\n      .status1.loading {\n        color: white;\n      }\n      .status1.loading svg {\n        animation: statusjump 300ms ease infinite alternate;\n      }\n      .status1.success {\n        color: #3498db;\n      }\n      .status1.failed {\n        color: #e74c3c;\n      }\n    `}\n    </style>\n    <div\n      style={{\n        position: \"absolute\",\n        left: \"50%\",\n        top: \"50%\",\n        transform: \"translate(-50%, -50%)\",\n        textAlign: \"center\",\n        letterSpacing: \".25rem\",\n        textTransform: \"uppercase\",\n        transition: \"color 300ms ease\",\n      }}\n      className={[\"status1\", location.status].join(\" \")}\n    >\n      <FaMapMarker style={{ fontSize: \"8rem\", margin: \"1rem\" }} />\n      <br />\n      <span>\n        {\n          {\n            loading: \"Finding your location\",\n            success: \"Found your location\",\n            failed: \"Failed finding your location\",\n          }[location.status]\n        }\n      </span>\n      <div style={{ margin: \"2rem\" }}>\n        <h1>\n          {location.data && location.data.query\n            ? location.data.query\n            : \"IP Address\"}\n        </h1>\n        <h1>\n          {location.data && location.data.country\n            ? location.data.country\n            : \"Country / Region\"}\n        </h1>\n        <h1>\n          {location.data && location.data.regionName\n            ? location.data.regionName\n            : \"State / Province\"}\n        </h1>\n        <h1>\n          {location.data && location.data.county\n            ? location.data.county\n            : \"County\"}\n        </h1>\n      </div>\n    </div>\n  </div>\n);\n","import React, { useEffect, useState } from \"react\";\nimport format from \"string-format\";\nimport config from \"./config.json\";\nimport Container from \"./components/Container\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport DataVisualizer from \"./components/DataVisualizer\";\nimport DataBar from \"./components/DataBar\";\nimport DataBarToggler from \"./components/DataBarToggler\";\nimport Cover from \"./components/Cover\";\nimport LocationDetector from \"./components/LocationDetector\";\n\nexport default () => {\n  let [selectedCounty, setSelectedCounty] = useState(null);\n  let [dataBarToggled, setDataBarToggled] = useState(false);\n  let [mapData, setMapData] = useState({ status: \"loading\" });\n  let [dbData, setDbData] = useState({ status: \"loading\" });\n  let [incidentData, setIncidentData] = useState({ status: \"loading\" });\n  let [locationData, setLocationData] = useState({ status: \"loading\" });\n\n  let loadMapData = async () => {\n    console.log(\"Loading map information\");\n    let response = await fetch(config.site.api.map);\n    if (response.ok) {\n      let data = await response.json();\n      setMapData({ status: \"success\", data });\n      console.log(\"Map information loaded\");\n      loadLocationData();\n      loadIncidentData();\n    } else {\n      setMapData({ status: \"failed\" });\n      console.log(\"Failed loading map infomation\");\n    }\n  };\n\n  let loadDbData = async () => {\n    console.log(\"Loading wild fire predictions\");\n    let response = await fetch(config.site.api.db);\n    if (response.ok) {\n      let data = await response.json();\n      setDbData({ status: \"success\", data });\n      console.log(\"Wild fire predictions loaded\");\n    } else {\n      setDbData({ status: \"failed\" });\n      console.log(\"Failed loading wild fire predictions\");\n    }\n  };\n\n  let loadIncidentData = async () => {\n    console.log(\"Loading incident data\");\n    let response = await fetch(config.site.api.incident);\n    if (response.ok) {\n      let data = await response.json();\n      setIncidentData({ status: \"success\", data });\n      console.log(\"Incident data loaded\");\n    } else {\n      setIncidentData({ status: \"failed\" });\n      console.log(\"Failed loading incident data\");\n    }\n  };\n\n  let loadLocationData = async () => {\n    console.log(\"Loading location data\");\n    let response = await fetch(config.site.api.ip);\n    if (response.ok) {\n      let data = await response.json();\n      if (\n        data.country !== \"United States\" ||\n        data.regionName !== \"California\"\n      ) {\n        setLocationData({ status: \"success\", data });\n        console.log(\"Location data loaded\");\n      } else {\n        setLocationData({ status: \"loading\", data });\n        let response = await fetch(format(config.site.api.zip, data.zip));\n        if (response.ok) {\n          let data = await response.json();\n          let county = data[0].zipCodes[0].county_name;\n          setLocationData({\n            status: \"success\",\n            data: {\n              ...locationData.data,\n              county,\n            },\n          });\n          console.log(\"Location data loaded\");\n          setSelectedCounty(\n            mapData.data.objects.subunits.geometries.filter(\n              ({ properties: { name } }) => name === county\n            )[0]\n          );\n          setDataBarToggled(true);\n        } else {\n          setLocationData({ status: \"failed\" });\n          console.log(\"Failed loading location data\");\n        }\n      }\n    } else {\n      setLocationData({ status: \"failed\" });\n    }\n  };\n\n  let loadData = () => {\n    let reset = mapData.status === \"failed\" || dbData.status === \"failed\";\n    if (reset) {\n      if (mapData.status === \"failed\") {\n        setMapData({ status: \"loading\" });\n        loadMapData();\n      } else if (dbData.status === \"failed\") {\n        setDbData({ status: \"loading\" });\n        loadDbData();\n      }\n    } else if (mapData.status === \"loading\" && dbData.status === \"loading\") {\n      loadMapData();\n      loadDbData();\n    }\n  };\n\n  useEffect(loadData);\n\n  let vw = (x) => `${x}vw`;\n\n  return (\n    <Container background={config.site.style.background}>\n      <div\n        style={{\n          width: vw(dataBarToggled ? 50 : 100),\n          transition: \"width 300ms ease\",\n          position: \"relative\",\n        }}\n      >\n        <Header name={config.site.name} />\n        {mapData.data && (\n          <DataVisualizer\n            data={mapData.data}\n            incident={incidentData.data}\n            db={dbData.data}\n            selectedCounty={selectedCounty}\n            onSelectCounty={(event, geo) => {\n              if (geo != null && !dataBarToggled) {\n                setDataBarToggled(true);\n              }\n              setSelectedCounty(geo);\n              event.stopPropagation();\n            }}\n            zoomed={!dataBarToggled}\n          />\n        )}\n        <Footer />\n        <DataBarToggler\n          toggled={dataBarToggled}\n          onToggle={() => {\n            setDataBarToggled(!dataBarToggled);\n          }}\n        />\n      </div>\n      <div\n        style={{\n          width: vw(dataBarToggled ? 50 : 0),\n          transition: \"width 300ms ease\",\n        }}\n      >\n        <DataBar selectedCounty={selectedCounty} incident={incidentData.data} />\n      </div>\n      <LocationDetector\n        location={locationData}\n        background={config.site.style.background}\n        setSelectedCounty={setSelectedCounty}\n      />\n      <Cover\n        display={mapData.status !== \"success\" && dbData.status !== \"success\"}\n        background={config.site.style.background}\n        name={config.site.name}\n        status={{ map: mapData.status, db: dbData.status }}\n        loadData={loadData}\n      />\n    </Container>\n  );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}